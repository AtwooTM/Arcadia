<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:zoom="clr-namespace:WPFExtensions.Controls;assembly=WPFExtensions"
                    xmlns:graphsharp="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls"
                    xmlns:graph="clr-namespace:Arcadia.Graph"
                    >

    <DataTemplate x:Key="InputVertexTemplate" DataType="{x:Type graph:NodeVertexBase}">
        <Border BorderBrush="DarkBlue" 
                                Background="LightBlue"
                                BorderThickness="2"
                                CornerRadius="10,10,10,10"
                                Padding="10">
            <StackPanel Orientation="Vertical" Margin="5">
                <TextBlock Text="{Binding Path=Id}" Foreground="DarkBlue" />
            </StackPanel>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="OutputVertexTemplate" DataType="{x:Type graph:NodeVertexBase}">
        <Border x:Name="outBorder" BorderBrush="DarkGreen" 
                                Background="LightGreen"
                                BorderThickness="2"
                                CornerRadius="10,10,10,10"
                                Padding="10">
            <StackPanel Orientation="Vertical" Margin="5">
                <TextBlock x:Name="outId" Text="{Binding Path=Id}" Foreground="DarkGreen" />
            </StackPanel>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Dirty}" Value="true">
                <Setter TargetName="outBorder" Property="BorderBrush" Value="DarkRed" />
                <Setter TargetName="outBorder" Property="Background" Value="LightSalmon" />
                <Setter TargetName="outId" Property="Foreground" Value="DarkRed" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <graph:VertexDataTemplateSelector x:Key="vertexTemplateSelector"/>

    <Style TargetType="{x:Type graphsharp:VertexControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type graphsharp:VertexControl}">
                        <ContentPresenter Name="contentPresenter" Content="{TemplateBinding Vertex}" 
                                              ContentTemplateSelector="{StaticResource vertexTemplateSelector}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type graphsharp:EdgeControl}">
        <Style.Resources>
            <ToolTip x:Key="ToolTipContent">
                <StackPanel>
                    <TextBlock FontWeight="Bold" Text="Edge.ID"/>
                    <TextBlock Text="{Binding Path=Id}"/>
                </StackPanel>
            </ToolTip>
        </Style.Resources>
        <Setter Property="ToolTip" Value="{StaticResource ToolTipContent}"/>
    </Style>

</ResourceDictionary>